#version=RHEL7
# Keyboard layouts
keyboard 'us'# Reboot after installation
reboot
# Root password
rootpw --iscrypted nope
# System timezone
timezone --isUtc Asia/Shanghai
# System language
lang en_US.UTF-8
# Firewall configuration
firewall --enabled --service=ssh
# System authorization information
auth --enableshadow --passalgo=sha512
# Use text mode install
text
# SELinux configuration
selinux --enforcing

# System services
services --disabled="kdump,rhsmcertd" --enabled="NetworkManager,network,sshd,rsyslog,ovirt-guest-agent"
# Network information
network  --bootproto=dhcp
# System bootloader configuration
bootloader --append "earlyprintk=ttyS0 console=ttyS0 rootdelay=300" --location=mbr --timeout=1
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel
# Disk partitioning information
autopart

%post --erroronfail

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70-persistent-net.rules /lib/udev/rules.d/75-persistent-net-generator.rules
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
rm -f /etc/sysconfig/network-scripts/ifcfg-ens3
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
BOOTPROTOv6="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="no"
PEERDNS="yes"
IPV6INIT="yes"
PERSISTENT_DHCLIENT="1"
EOF

# set virtual-guest as default profile for tuned
echo "virtual-guest" > /etc/tuned/active_profile

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF
echo .

cat <<EOL > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOL

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

## workaround https://bugzilla.redhat.com/show_bug.cgi?id=966888
#if ! grep -q growpart /etc/cloud/cloud.cfg; then
#  sed -i 's/ - resizefs/ - growpart\n - resizefs/' /etc/cloud/cloud.cfg
#fi

# Disable subscription-manager yum plugins
sed -i 's|^enabled=1|enabled=0|' /etc/yum/pluginconf.d/product-id.conf
sed -i 's|^enabled=1|enabled=0|' /etc/yum/pluginconf.d/subscription-manager.conf

echo "Cleaning old yum repodata."
yum clean all

## clean up installation logs"
#rm -rf /var/log/yum.log
#rm -rf /var/lib/yum/*
#rm -rf /root/install.log
#rm -rf /root/install.log.syslog
#rm -rf /root/anaconda-ks.cfg
#rm -rf /var/log/anaconda*

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
/usr/sbin/fixfiles -R -a restore

# remove random-seed so it's not the same every time
rm -f /var/lib/systemd/random-seed

#### WALA configuration ####
rm -rf /etc/yum.repos.d/*.repo

sed -i \
-e 's/rhgb\ quiet//' \
-e 's/rd.lvm.lv=rhel\/root rd.lvm.lv=rhel\/swap//' \
-e 's/^\(GRUB_CMDLINE_LINUX=.*\)"/\1 net.ifnames=0"/' \
/etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

#Disable default swap
sed -i 's/^\/dev\/mapper\/rhel-swap/\#\/dev\/mapper\/rhel-swap/g' /etc/fstab

##Hyper-V drivers
#echo "add_drivers+=\"hv_vmbus hv_netvsc hv_storvsc\"" >> /etc/dracut.conf
#dracut -f -v

#mount iso
mkdir -p /root/.wala
sh > /root/.wala-install.log 2>&1 <<\EOF
setenforce 0
mount -o loop /dev/cdrom /root/.wala
#Install fio,iperf3
/usr/bin/cp -r /root/.wala/tools /root/
cd /root/tools/fio
./install.sh
cd /root/tools/iperf3
./install.sh
cd /root/
#Copy packages to /root/
/usr/bin/cp /root/.wala/WALinuxAgent*.el7.noarch.rpm /root/
/usr/bin/cp /root/.wala/rhui-azure-rhel7*.rpm /root/
#Install WALinuxAgent package
ls -l /root/WALinuxAgent*.rpm
rpm -ivh /root/WALinuxAgent*.rpm
systemctl enable waagent.service
#recovery
umount /root/.wala
setenforce 1
EOF

#Modify waagent.conf
sed -i \
-e 's/ResourceDisk.EnableSwap=n/ResourceDisk.EnableSwap=y/' \
-e 's/ResourceDisk.SwapSizeMB=0/ResourceDisk.SwapSizeMB=2048/' \
/etc/waagent.conf

# waagent -deprovision -force
# Run these commands to replace the waagent -deprovision
service waagent stop
# Delete root password
sed -i \
-e '1i\root:*LOCK*:14600::::::' \
-e '/root:/d' \
/etc/shadow
# Delete ssh key pairs
rm -f /etc/ssh/ssh_host_*key*
# Reset DHCP_HOSTNAME
sed -i '/DHCP_HOSTNAME=/d' /etc/sysconfig/network-scripts/ifcfg-eth0
echo "DHCP_HOSTNAME=localhost.localdomain /etc/sysconfig/network-scripts/ifcfg-eth0"
# Remove /etc/resolv.conf
rm -f /etc/resolv.conf
# Remove other files
rm -f /root/.bash_history /var/log/waagent.log
# Remove dhclient lease files
rm -f /var/lib/dhclient/dhclient-*.leases
export HISTSIZE=0

%end

%packages --ignoremissing
@core
#cloud-init
#cloud-utils-growpart
dracut-config-generic
dracut-norescue
firewalld
grub2
heat-cfntools
kernel
nfs-utils
rhevm-guest-agent-common
rhn-setup
rsync
tar
tcpdump
yum-rhn-plugin
yum-utils
python-setuptools

net-tools
python-pyasn1
libaio-devel
nmap
make
gcc
chrony
wget
bind-utils
unzip
bc
mdadm
vim-enhanced

-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-iprutils
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-plymouth

%end





## version=RHEL7
## System keyboard
#keyboard 'us'
## Reboot after installation
#reboot
## Root password
#rootpw --iscrypted nope
## System timezone
#timezone  Asia/Shanghai
## System language
#lang en_US.UTF-8
## Firewall configuration
#firewall --enabled --service=ssh
## System authorization information
#auth  --useshadow  --passalgo=sha512
## Use text mode install
#text
## SELinux configuration
#selinux --enforcing
#
## System services
#services --disabled="kdump,rhsmcertd" --enabled="NetworkManager,sshd,rsyslog,ovirt-guest-agent"
## Network information
#network  --bootproto=dhcp --device=eth0 --onboot=on
## System bootloader configuration
#bootloader --append "earlyprintk=ttyS0 console=ttyS0 rootdelay=300" --location=mbr --timeout=1
## Clear the Master Boot Record
#zerombr
## Partition clearing information
#clearpart --all --initlabel
## Disk partitioning information
#autopart
#
## Install OS instead of upgrade
#install
## Use cdrom installation
#cdrom
## Run the Setup Agent on first boot
#firstboot --disable
## Installation logging level
#logging --level=info
## Partition clearing information
#clearpart --all --initlabel
#
#%post
## workaround anaconda requirements
#passwd -d root
#passwd -l root
#
#rm -rf /etc/yum.repos.d/*.repo
#
#sed -i \
#-e 's/crashkernel=auto\ //' \
#-e 's/rhgb\ quiet//' \
#-e 's/rd.lvm.lv=rhel\/root rd.lvm.lv=rhel\/swap//' \
#-e 's/^\(GRUB_CMDLINE_LINUX=.*\)"/\1 net.ifnames=0"/' \
#/etc/default/grub
#grub2-mkconfig -o /boot/grub2/grub.cfg
#
## create empty /etc/udev/rules.d/80-net-name-slot.rules to make the ethernet name as eth0
#ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules
#
#cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
#TYPE=Ethernet
#BOOTPROTO=dhcp
#PEERDNS=yes
#USERCTL=no
#DEVICE=eth0
#ONBOOT=yes
#IPV6INIT=no
#EOF
#
#rm -f /etc/udev/rules.d/70-persistent-net.rules /lib/udev/rules.d/75-persistent-net-generator.rules
#chkconfig network on
#systemctl enable sshd.service
#
#sed -i \
#-e '/^PermitRootLogin/s/^/#/' \
#-e '/^PasswordAuthentication/s/^/#/' \
#-e '/^ClientAliveInterval/s/^/#/' \
#/etc/ssh/sshd_config
#
#cat << EOF >> /etc/ssh/sshd_config
#PermitRootLogin yes
#PasswordAuthentication yes
#ClientAliveInterval 180
#EOF


#%packages --ignoremissing
#@core
#@base
#@console-internet
#
#python-pyasn1
#libaio-devel
#nmap
#tcpdump
#make
#gcc
#chrony
#
#
#-biosdevname
#-plymouth
#-iprutils
#-dracut-config-rescue
#
#%end
